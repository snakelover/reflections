What happens when you initialize a repository? Why do you need to do it?

In this case Git creates hidden folder '.git' that contains special metadata. 
I need this to start tracking my files in that directory.

How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area contains only chosen files from working directory and and is a kind
of temporary place for storing files that chosen to be added to commit.
I think it offers the value of ability to choose which files should be commited.

How can you use the staging area to make sure you have one commit per logical change?

I can add to the staging area only those files than were edited during the adding one logical change

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

It is helpful when, for example, you want to experiment with adding a new feature and not sure 
will it stay in your program for a long time or not so but at the same time you want to always have working version of your program.
In that case you can create a new branch for experimental version with new features and at the same time continue to work on your main version on your master branch. 

How do the diagrams help you visualize the branch structure?

They help to see commits that are points of separation for different branches.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is the branch that combines commits from both branches. We represent it in the diagram that way because it looks like th branches become the one. 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Pros are that it cut the time that in other case would be wasted on manual
operations but cons are that it can lead to unexpected changes.
